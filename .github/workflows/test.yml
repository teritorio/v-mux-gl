on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install proj
        run: sudo apt-get install -y proj-bin libproj-dev

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('.gitub/workflows/lint.yml') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -r merge_proxy/requirements.txt -r merge_proxy/requirements-dev.txt

      - uses: psf/black@20.8b1

      - name: Run flake8
        run: (cd merge_proxy && python -m flake8 merge_proxy/)

      - name: Run mypy
        run: (cd merge_proxy && python -m mypy merge_proxy/)

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]
        # include:
        #   - os: macos-latest
        #     python-version: "3.9"
        #   - os: windows-latest
        #     python-version: "3.9"
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: System information
      run: python .github/workflows/system_info.py

    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install -r merge_proxy/requirements.txt -r merge_proxy/requirements-test.txt

    - name: Sanity check with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 merge_proxy/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        python -m flake8 merge_proxy/ --count --exit-zero --statistics

    - name: Test with pytest
      run: |
        cd merge_proxy/ && python -m pytest --cov=package_name --cov-report term --cov-report xml --cov-config .coveragerc --junitxml=merge_proxy/testresults.xml

  docker:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/master'

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker Build and Push
        uses: cartoway/docker-compose-build-push-action@main
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
